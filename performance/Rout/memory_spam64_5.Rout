
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> rm(list = ls())
> source("setup.R")
> lib.loc <- "../spam_libs"
> library("dotCall64", lib.loc=lib.loc)
> library("spam", lib.loc=lib.loc)
Loading required package: grid
Spam version 2.0-05 (2016-11-17) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

> library("spam64", lib.loc=lib.loc)
> powerboost()
> spam_ <- TRUE
> version_ <- "memory_spam64"
> loadCommandlineArgs()
[1] "density_=0.01"
[1] "nr_=5"
> 
> 
> out <- data.frame(version = version_, nrow = nrow_, density = density_,
+                   t_peak_mem=NA, t_after_mem=NA,
+                   prod_peak_mem=NA, prod_after_mem=NA,
+                   cov_peak_mem=NA, cov_after_mem=NA,
+                   chol_peak_mem=NA, chol_after_mem=NA  ) 
> 
> 
> m <- get_matrix(nrow_, density_, invertible = FALSE, verbose = FALSE, spam = spam_, seed = 1)
> n <- get_matrix(nrow_, density_, invertible = FALSE, verbose = FALSE, spam = spam_, seed = 1)
> out[1,c("t_peak_mem","t_after_mem")] <- get_mem(expression(tt <- t(m)))
> out[1,c("prod_peak_mem","prod_after_mem")] <- get_mem(expression(tt <- m%*%m))
> out[1,c("cov_peak_mem","cov_after_mem")] <- get_mem(expression(tt <- cov.wend1(m,1)))
> 
> m <- get_matrix(nrow_, density_, invertible = TRUE, verbose = FALSE,  spam = spam_, seed = 1)
> out[1,c("chol_peak_mem","chol_after_mem")] <- get_mem(expression(tt <- chol.spam(m)))
Warning messages:
1: Increased 'nnzR' with 'NgPeyton' method
(currently set to 240224 from 192179) 
2: Increased 'nnzR' with 'NgPeyton' method
(currently set to 300280 from 240224) 
3: Increased 'nnzR' with 'NgPeyton' method
(currently set to 375350 from 300280) 
4: Increased 'nnzR' with 'NgPeyton' method
(currently set to 469188 from 375350) 
5: Increased 'nnzR' with 'NgPeyton' method
(currently set to 586485 from 469188) 
6: Increased 'nnzR' with 'NgPeyton' method
(currently set to 733107 from 586485) 
7: Increased 'nnzR' with 'NgPeyton' method
(currently set to 916384 from 733107) 
8: Increased 'nnzR' with 'NgPeyton' method
(currently set to 1145480 from 916384) 
9: Increased 'nnzcolindices' with 'NgPeyton' method
(currently set to 50000 from 40000) 
10: Increased 'nnzcolindices' with 'NgPeyton' method
(currently set to 62500 from 50000) 
> 
> save(out, file=paste0("data/",version_,"_",nr_,".RData"))
> 
> proc.time()
   user  system elapsed 
 28.864   0.465  30.860 
